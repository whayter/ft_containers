
--------------------------------------------------------
-------------------------- vector ----------------------
--------------------------------------------------------

--------------------------------------------------------
----------------- default constructor ------------------


-- capacities:

empty:               1
size:                0
max size:            4611686018427387903
capacity:            0

-- content:

using []:           
using at:           
using iterator:     
using rev iterator: 


--------------------------------------------------------
----------------- fill constructor (1)------------------


-- capacities:

empty:               0
size:                5
max size:            4611686018427387903
capacity:            5

-- access:

Front:               0
Back:                0

-- content:

using []:            0 0 0 0 0
using at:            0 0 0 0 0
using iterator:      0 0 0 0 0
using rev iterator:  0 0 0 0 0


--------------------------------------------------------
----------------- fill constructor (2)------------------


-- capacities:

empty:               0
size:                5
max size:            4611686018427387903
capacity:            5

-- access:

Front:               50
Back:                50

-- content:

using []:            50 50 50 50 50
using at:            50 50 50 50 50
using iterator:      50 50 50 50 50
using rev iterator:  50 50 50 50 50


--------------------------------------------------------
----------------- fill constructor (3)------------------


-- capacities:

empty:               1
size:                0
max size:            4611686018427387903
capacity:            0

-- content:

using []:           
using at:           
using iterator:     
using rev iterator: 


--------------------------------------------------------
----------------- range constructor (1) ----------------


-- capacities:

empty:               0
size:                2
max size:            4611686018427387903
capacity:            2

-- access:

Front:               50
Back:                50

-- content:

using []:            50 50
using at:            50 50
using iterator:      50 50
using rev iterator:  50 50


--------------------------------------------------------
----------------- range constructor (2) ----------------


-- capacities:

empty:               1
size:                0
max size:            4611686018427387903
capacity:            0

-- content:

using []:           
using at:           
using iterator:     
using rev iterator: 


--------------------------------------------------------
------------------ copy constructor (1) ----------------


-- capacities:

empty:               0
size:                10
max size:            4611686018427387903
capacity:            10

-- access:

Front:               50
Back:                50

-- content:

using []:            50 50 50 50 50 50 50 50 50 50
using at:            50 50 50 50 50 50 50 50 50 50
using iterator:      50 50 50 50 50 50 50 50 50 50
using rev iterator:  50 50 50 50 50 50 50 50 50 50


--------------------------------------------------------
------------------ copy constructor (2) ----------------


-- capacities:

empty:               1
size:                0
max size:            4611686018427387903
capacity:            0

-- content:

using []:           
using at:           
using iterator:     
using rev iterator: 


--------------------------------------------------------
---------------------- push / pop ----------------------


-- capacities:

empty:               0
size:                4
max size:            4611686018427387903
capacity:            4

-- access:

Front:               50
Back:                53

-- content:

using []:            50 51 52 53
using at:            50 51 52 53
using iterator:      50 51 52 53
using rev iterator:  53 52 51 50


-- capacities:

empty:               0
size:                1
max size:            4611686018427387903
capacity:            4

-- access:

Front:               50
Back:                50

-- content:

using []:            50
using at:            50
using iterator:      50
using rev iterator:  50


-- capacities:

empty:               1
size:                0
max size:            4611686018427387903
capacity:            4

-- content:

using []:           
using at:           
using iterator:     
using rev iterator: 


--------------------------------------------------------
----------------- insert (single element) --------------


-- capacities:

empty:               0
size:                1
max size:            4611686018427387903
capacity:            1

-- access:

Front:               42
Back:                42

-- content:

using []:            42
using at:            42
using iterator:      42
using rev iterator:  42


-- capacities:

empty:               0
size:                2
max size:            4611686018427387903
capacity:            2

-- access:

Front:               57
Back:                42

-- content:

using []:            57 42
using at:            57 42
using iterator:      57 42
using rev iterator:  42 57


-- capacities:

empty:               0
size:                3
max size:            4611686018427387903
capacity:            4

-- access:

Front:               57
Back:                58

-- content:

using []:            57 42 58
using at:            57 42 58
using iterator:      57 42 58
using rev iterator:  58 42 57


-- capacities:

empty:               0
size:                5
max size:            4611686018427387903
capacity:            8

-- access:

Front:               57
Back:                58

-- content:

using []:            57 2 1 42 58
using at:            57 2 1 42 58
using iterator:      57 2 1 42 58
using rev iterator:  58 42 1 2 57


--------------------------------------------------------
---------------------- insert (fill) -------------------


-- capacities:

empty:               0
size:                8
max size:            4611686018427387903
capacity:            8

-- access:

Front:               61
Back:                61

-- content:

using []:            61 61 61 61 61 61 61 61
using at:            61 61 61 61 61 61 61 61
using iterator:      61 61 61 61 61 61 61 61
using rev iterator:  61 61 61 61 61 61 61 61


-- capacities:

empty:               0
size:                10
max size:            4611686018427387903
capacity:            16

-- access:

Front:               61
Back:                61

-- content:

using []:            61 61 61 61 80 80 61 61 61 61
using at:            61 61 61 61 80 80 61 61 61 61
using iterator:      61 61 61 61 80 80 61 61 61 61
using rev iterator:  61 61 61 61 80 80 61 61 61 61


-- capacities:

empty:               0
size:                17
max size:            4611686018427387903
capacity:            32

-- access:

Front:               61
Back:                61

-- content:

using []:            61 61 61 61 80 81 81 81 81 81 81 81 80 61 61 61 61
using at:            61 61 61 61 80 81 81 81 81 81 81 81 80 61 61 61 61
using iterator:      61 61 61 61 80 81 81 81 81 81 81 81 80 61 61 61 61
using rev iterator:  61 61 61 61 80 81 81 81 81 81 81 81 80 61 61 61 61


--------------------------------------------------------
------------------- insert (range) (1) -----------------


-- capacities:

empty:               0
size:                5
max size:            4611686018427387903
capacity:            5

-- access:

Front:               48
Back:                50

-- content:

using []:            48 48 49 50 50
using at:            48 48 49 50 50
using iterator:      48 48 49 50 50
using rev iterator:  50 50 49 48 48


-- capacities:

empty:               0
size:                7
max size:            4611686018427387903
capacity:            10

-- access:

Front:               48
Back:                48

-- content:

using []:            48 48 49 50 50 49 48
using at:            48 48 49 50 50 49 48
using iterator:      48 48 49 50 50 49 48
using rev iterator:  48 49 50 50 49 48 48


--------------------------------------------------------
------------------- insert (range) (2) -----------------


-- capacities:

empty:               0
size:                9
max size:            4611686018427387903
capacity:            9

-- access:

Front:               49
Back:                48

-- content:

using []:            49 49 50 51 51 48 48 48 48
using at:            49 49 50 51 51 48 48 48 48
using iterator:      49 49 50 51 51 48 48 48 48
using rev iterator:  48 48 48 48 51 51 50 49 49


-- capacities:

empty:               0
size:                11
max size:            4611686018427387903
capacity:            18

-- access:

Front:               49
Back:                49

-- content:

using []:            49 49 50 51 51 48 48 48 48 50 49
using at:            49 49 50 51 51 48 48 48 48 50 49
using iterator:      49 49 50 51 51 48 48 48 48 50 49
using rev iterator:  49 50 48 48 48 48 51 51 50 49 49


--------------------------------------------------------
--------------------- assign (fill) --------------------


-- capacities:

empty:               0
size:                10
max size:            4611686018427387903
capacity:            10

-- access:

Front:               100
Back:                100

-- content:

using []:            100 100 100 100 100 100 100 100 100 100
using at:            100 100 100 100 100 100 100 100 100 100
using iterator:      100 100 100 100 100 100 100 100 100 100
using rev iterator:  100 100 100 100 100 100 100 100 100 100


-- capacities:

empty:               0
size:                8
max size:            4611686018427387903
capacity:            10

-- access:

Front:               48
Back:                48

-- content:

using []:            48 48 48 48 48 48 48 48
using at:            48 48 48 48 48 48 48 48
using iterator:      48 48 48 48 48 48 48 48
using rev iterator:  48 48 48 48 48 48 48 48


-- capacities:

empty:               0
size:                15
max size:            4611686018427387903
capacity:            15

-- access:

Front:               50
Back:                50

-- content:

using []:            50 50 50 50 50 50 50 50 50 50 50 50 50 50 50
using at:            50 50 50 50 50 50 50 50 50 50 50 50 50 50 50
using iterator:      50 50 50 50 50 50 50 50 50 50 50 50 50 50 50
using rev iterator:  50 50 50 50 50 50 50 50 50 50 50 50 50 50 50


--------------------------------------------------------
-------------------- assign (range) --------------------


-- capacities:

empty:               0
size:                15
max size:            4611686018427387903
capacity:            15

-- access:

Front:               48
Back:                48

-- content:

using []:            48 48 49 50 50 50 50 50 50 50 49 48 48 48 48
using at:            48 48 49 50 50 50 50 50 50 50 49 48 48 48 48
using iterator:      48 48 49 50 50 50 50 50 50 50 49 48 48 48 48
using rev iterator:  48 48 48 48 49 50 50 50 50 50 50 50 49 48 48


-- capacities:

empty:               0
size:                13
max size:            4611686018427387903
capacity:            15

-- access:

Front:               49
Back:                48

-- content:

using []:            49 50 50 50 50 50 50 50 49 48 48 48 48
using at:            49 50 50 50 50 50 50 50 49 48 48 48 48
using iterator:      49 50 50 50 50 50 50 50 49 48 48 48 48
using rev iterator:  48 48 48 48 49 50 50 50 50 50 50 50 49


-- capacities:

empty:               0
size:                17
max size:            4611686018427387903
capacity:            17

-- access:

Front:               48
Back:                48

-- content:

using []:            48 48 48 48 49 50 50 50 50 50 50 50 49 48 48 48 48
using at:            48 48 48 48 49 50 50 50 50 50 50 50 49 48 48 48 48
using iterator:      48 48 48 48 49 50 50 50 50 50 50 50 49 48 48 48 48
using rev iterator:  48 48 48 48 49 50 50 50 50 50 50 50 49 48 48 48 48


--------------------------------------------------------
-------------------- resize (smaller) ------------------


-- capacities:

empty:               0
size:                2
max size:            4611686018427387903
capacity:            32

-- access:

Front:               48
Back:                48

-- content:

using []:            48 48
using at:            48 48
using iterator:      48 48
using rev iterator:  48 48


--------------------------------------------------------
--------------------- resize (bigger) ------------------


-- capacities:

empty:               0
size:                50
max size:            4611686018427387903
capacity:            64

-- access:

Front:               48
Back:                0

-- content:

using []:            48 48 48 48 49 50 50 50 50 50 50 50 49 48 48 48 48 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
using at:            48 48 48 48 49 50 50 50 50 50 50 50 49 48 48 48 48 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
using iterator:      48 48 48 48 49 50 50 50 50 50 50 50 49 48 48 48 48 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
using rev iterator:  0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 48 48 48 48 49 50 50 50 50 50 50 50 49 48 48 48 48


--------------------------------------------------------
-------------------------- clear -----------------------


-- capacities:

empty:               1
size:                0
max size:            4611686018427387903
capacity:            32

-- content:

using []:           
using at:           
using iterator:     
using rev iterator: 


--------------------------------------------------------
----------------- erase (single element) ---------------


-- capacities:

empty:               0
size:                15
max size:            4611686018427387903
capacity:            32

-- access:

Front:               48
Back:                48

-- content:

using []:            48 48 48 49 50 50 50 50 50 50 49 48 48 48 48
using at:            48 48 48 49 50 50 50 50 50 50 49 48 48 48 48
using iterator:      48 48 48 49 50 50 50 50 50 50 49 48 48 48 48
using rev iterator:  48 48 48 48 49 50 50 50 50 50 50 49 48 48 48


--------------------------------------------------------
--------------------- iterator (1) ----------------------

Pre inc
20 | 20
Pre dec
25 | 25
Post inc
25 | 20
Post dec
20 | 25

5
10
const_ite +=/-=: 15 | 25
(it == const_it): 0
(const_ite - it): -3
(ite + 3 == it): 1

-- capacities:

empty:               0
size:                5
max size:            4611686018427387903
capacity:            5

--------------------------------------------------------
--------------------- iterator (2) ----------------------


-- capacities:

empty:               0
size:                5
max size:            4611686018427387903
capacity:            5

-- access:

Front:               5
Back:                25

-- content:

using []:            5 10 15 20 25
using at:            5 10 15 20 25
using iterator:      5 10 15 20 25
using rev iterator:  25 20 15 10 5
5
10
const_ite +=/-=: 15 | 25
(it == const_it): 0
(const_ite - it): -3
(ite + 3 == it): 1

-- capacities:

empty:               0
size:                5
max size:            4611686018427387903
capacity:            5

-- access:

Front:               5
Back:                25

-- content:

using []:            5 21 15 42 25
using at:            5 21 15 42 25
using iterator:      5 21 15 42 25
using rev iterator:  25 42 15 21 5

--------------------------------------------------------
----------------------- swap ---------------------------

BEFORE SWAP
foo contains:

-- capacities:

empty:               0
size:                3
max size:            4611686018427387903
capacity:            3

-- access:

Front:               15
Back:                15

-- content:

using []:            15 15 15
using at:            15 15 15
using iterator:      15 15 15
using rev iterator:  15 15 15
bar contains:

-- capacities:

empty:               0
size:                5
max size:            4611686018427387903
capacity:            5

-- access:

Front:               42
Back:                42

-- content:

using []:            42 42 42 42 42
using at:            42 42 42 42 42
using iterator:      42 42 42 42 42
using rev iterator:  42 42 42 42 42
AFTER SWAP
foo contains:

-- capacities:

empty:               0
size:                5
max size:            4611686018427387903
capacity:            5

-- access:

Front:               42
Back:                42

-- content:

using []:            42 42 42 42 42
using at:            42 42 42 42 42
using iterator:      42 42 42 42 42
using rev iterator:  42 42 42 42 42
bar contains:

-- capacities:

empty:               0
size:                3
max size:            4611686018427387903
capacity:            3

-- access:

Front:               15
Back:                15

-- content:

using []:            15 15 15
using at:            15 15 15
using iterator:      15 15 15
using rev iterator:  15 15 15
Iterator validity:
1
1

--------------------------------------------------------
---------------------- hard test 1 ---------------------

--- vec

-- capacities:

empty:               0
size:                4
max size:            4611686018427387903
capacity:            4

-- access:

Front:               42
Back:                42

-- content:

using []:            42 42 42 42
using at:            42 42 42 42
using iterator:      42 42 42 42
using rev iterator:  42 42 42 42

--- vec.insert(vec.begin() + 2, vec_2.begin(), vec_2.end())

-- capacities:

empty:               0
size:                22
max size:            4611686018427387903
capacity:            22

-- access:

Front:               42
Back:                42

-- content:

using []:            42 42 4 5 42 5555 5555 5555 5555 5555 5555 5555 2 4 10 15 7 1 2 90 42 42
using at:            42 42 4 5 42 5555 5555 5555 5555 5555 5555 5555 2 4 10 15 7 1 2 90 42 42
using iterator:      42 42 4 5 42 5555 5555 5555 5555 5555 5555 5555 2 4 10 15 7 1 2 90 42 42
using rev iterator:  42 42 90 2 1 7 15 10 4 2 5555 5555 5555 5555 5555 5555 5555 42 5 4 42 42

--- vec.resize(9)

-- capacities:

empty:               0
size:                9
max size:            4611686018427387903
capacity:            22

-- access:

Front:               42
Back:                5555

-- content:

using []:            42 42 4 5 42 5555 5555 5555 5555
using at:            42 42 4 5 42 5555 5555 5555 5555
using iterator:      42 42 4 5 42 5555 5555 5555 5555
using rev iterator:  5555 5555 5555 5555 42 5 4 42 42

--- vec.resize(19, 1111)

-- capacities:

empty:               0
size:                19
max size:            4611686018427387903
capacity:            22

-- access:

Front:               42
Back:                1111

-- content:

using []:            42 42 4 5 42 5555 5555 5555 5555 1111 1111 1111 1111 1111 1111 1111 1111 1111 1111
using at:            42 42 4 5 42 5555 5555 5555 5555 1111 1111 1111 1111 1111 1111 1111 1111 1111 1111
using iterator:      42 42 4 5 42 5555 5555 5555 5555 1111 1111 1111 1111 1111 1111 1111 1111 1111 1111
using rev iterator:  1111 1111 1111 1111 1111 1111 1111 1111 1111 1111 5555 5555 5555 5555 42 5 4 42 42


--------------------------------------------------------
---------------------- hard test 2 ---------------------

len: 5

-- capacities:

empty:               0
size:                5
max size:            4611686018427387903
capacity:            5

-- capacities:

empty:               0
size:                3
max size:            4611686018427387903
capacity:            3

-- capacities:

empty:               0
size:                7
max size:            4611686018427387903
capacity:            10


-- capacities:

empty:               0
size:                7
max size:            4611686018427387903
capacity:            7

-- capacities:

empty:               1
size:                0
max size:            4611686018427387903
capacity:            3

-- capacities:

empty:               0
size:                3
max size:            4611686018427387903
capacity:            10


--------------------------------------------------------
---------------------- hard test 3 ---------------------

--- vct:

-- capacities:

empty:               0
size:                7
max size:            4611686018427387903
capacity:            7
--- vct_two:

-- capacities:

empty:               0
size:                4
max size:            4611686018427387903
capacity:            4
--- vct:

-- capacities:

empty:               0
size:                4
max size:            4611686018427387903
capacity:            7
--- vct_two:

-- capacities:

empty:               0
size:                2
max size:            4611686018427387903
capacity:            4
--- vct_three:

-- capacities:

empty:               0
size:                7
max size:            4611686018427387903
capacity:            7
--- vct_four:

-- capacities:

empty:               0
size:                4
max size:            4611686018427387903
capacity:            4
--- vct_four:

-- capacities:

empty:               0
size:                6
max size:            4611686018427387903
capacity:            6
--- vct:

-- capacities:

empty:               0
size:                5
max size:            4611686018427387903
capacity:            7
--- vct_two:

-- capacities:

empty:               0
size:                3
max size:            4611686018427387903
capacity:            4

--------------------------------------------------------
---------------------- hard test 4 ---------------------


-- capacities:

empty:               0
size:                10
max size:            4611686018427387903
capacity:            10

-- access:

Front:               30
Back:                3

-- content:

using []:            30 27 24 21 18 15 12 9 6 3
using at:            30 27 24 21 18 15 12 9 6 3
using iterator:      30 27 24 21 18 15 12 9 6 3
using rev iterator:  3 6 9 12 15 18 21 24 27 30

-- capacities:

empty:               0
size:                1
max size:            4611686018427387903
capacity:            1

-- access:

Front:               42
Back:                42

-- content:

using []:            42
using at:            42
using iterator:      42
using rev iterator:  42

-- capacities:

empty:               0
size:                3
max size:            4611686018427387903
capacity:            3

-- access:

Front:               21
Back:                42

-- content:

using []:            21 21 42
using at:            21 21 42
using iterator:      21 21 42
using rev iterator:  42 21 21

-- capacities:

empty:               0
size:                4
max size:            4611686018427387903
capacity:            6

-- capacities:

empty:               0
size:                6
max size:            4611686018427387903
capacity:            6

-- capacities:

empty:               0
size:                4
max size:            4611686018427387903
capacity:            6

-- capacities:

empty:               0
size:                14
max size:            4611686018427387903
capacity:            14

-- capacities:

empty:               1
size:                0
max size:            4611686018427387903
capacity:            10

--------------------------------------------------------
---------------------- hard test 5 ---------------------


-- capacities:

empty:               0
size:                5
max size:            4611686018427387903
capacity:            5

-- capacities:

empty:               0
size:                3
max size:            4611686018427387903
capacity:            3

-- capacities:

empty:               0
size:                5
max size:            4611686018427387903
capacity:            6

-- capacities:

empty:               0
size:                8
max size:            4611686018427387903
capacity:            12
insert return:
42
84

-- capacities:

empty:               0
size:                10
max size:            4611686018427387903
capacity:            12

--------------------------------------------------------
---------------------- hard test 6 ---------------------


-- capacities:

empty:               0
size:                7
max size:            4611686018427387903
capacity:            7

-- access:

Front:               20
Back:                3

-- content:

using []:            20 20 15 12 9 6 3
using at:            20 20 15 12 9 6 3
using iterator:      20 20 15 12 9 6 3
using rev iterator:  3 6 9 12 15 20 20

-- capacities:

empty:               0
size:                10
max size:            4611686018427387903
capacity:            14

-- access:

Front:               20
Back:                42

-- content:

using []:            20 20 15 12 9 6 3 42 42 42
using at:            20 20 15 12 9 6 3 42 42 42
using iterator:      20 20 15 12 9 6 3 42 42 42
using rev iterator:  42 42 42 3 6 9 12 15 20 20

-- capacities:

empty:               0
size:                18
max size:            4611686018427387903
capacity:            28

-- access:

Front:               20
Back:                43

-- content:

using []:            20 20 15 12 9 6 3 42 42 42 43 43 43 43 43 43 43 43
using at:            20 20 15 12 9 6 3 42 42 42 43 43 43 43 43 43 43 43
using iterator:      20 20 15 12 9 6 3 42 42 42 43 43 43 43 43 43 43 43
using rev iterator:  43 43 43 43 43 43 43 43 42 42 42 3 6 9 12 15 20 20

-- capacities:

empty:               0
size:                10
max size:            4611686018427387903
capacity:            28

-- access:

Front:               20
Back:                42

-- content:

using []:            20 20 15 12 9 6 3 42 42 42
using at:            20 20 15 12 9 6 3 42 42 42
using iterator:      20 20 15 12 9 6 3 42 42 42
using rev iterator:  42 42 42 3 6 9 12 15 20 20

-- capacities:

empty:               0
size:                23
max size:            4611686018427387903
capacity:            28

-- access:

Front:               20
Back:                44

-- content:

using []:            20 20 15 12 9 6 3 42 42 42 44 44 44 44 44 44 44 44 44 44 44 44 44
using at:            20 20 15 12 9 6 3 42 42 42 44 44 44 44 44 44 44 44 44 44 44 44 44
using iterator:      20 20 15 12 9 6 3 42 42 42 44 44 44 44 44 44 44 44 44 44 44 44 44
using rev iterator:  44 44 44 44 44 44 44 44 44 44 44 44 44 42 42 42 3 6 9 12 15 20 20

-- capacities:

empty:               0
size:                5
max size:            4611686018427387903
capacity:            28

-- access:

Front:               20
Back:                9

-- content:

using []:            20 20 15 12 9
using at:            20 20 15 12 9
using iterator:      20 20 15 12 9
using rev iterator:  9 12 15 20 20

-- capacities:

empty:               0
size:                5
max size:            4611686018427387903
capacity:            28

-- access:

Front:               20
Back:                9

-- content:

using []:            20 20 15 12 9
using at:            20 20 15 12 9
using iterator:      20 20 15 12 9
using rev iterator:  9 12 15 20 20

-- capacities:

empty:               0
size:                5
max size:            4611686018427387903
capacity:            87

-- access:

Front:               20
Back:                9

-- content:

using []:            20 20 15 12 9
using at:            20 20 15 12 9
using iterator:      20 20 15 12 9
using rev iterator:  9 12 15 20 20

-- capacities:

empty:               1
size:                0
max size:            4611686018427387903
capacity:            0

-- capacities:

empty:               0
size:                5
max size:            4611686018427387903
capacity:            5

-- capacities:

empty:               0
size:                5
max size:            4611686018427387903
capacity:            88

-- access:

Front:               20
Back:                9

-- content:

using []:            20 20 15 12 9
using at:            20 20 15 12 9
using iterator:      20 20 15 12 9
using rev iterator:  9 12 15 20 20

-- capacities:

empty:               0
size:                5
max size:            4611686018427387903
capacity:            5

-- access:

Front:               20
Back:                9

-- content:

using []:            20 20 15 12 9
using at:            20 20 15 12 9
using iterator:      20 20 15 12 9
using rev iterator:  9 12 15 20 20

-- capacities:

empty:               1
size:                0
max size:            4611686018427387903
capacity:            5

--------------------------------------------------------
---------------------- hard test 7 ---------------------


-- capacities:

empty:               0
size:                4
max size:            4611686018427387903
capacity:            4

-- capacities:

empty:               0
size:                4
max size:            4611686018427387903
capacity:            4

-- capacities:

empty:               0
size:                8
max size:            4611686018427387903
capacity:            8

--------------------------------------------------------
---------------------- hard test 8 ---------------------


-- capacities:

empty:               0
size:                100000
max size:            4611686018427387903
capacity:            131072

-- capacities:

empty:               0
size:                100000
max size:            4611686018427387903
capacity:            100000

--------------------------------------------------------
-------------------- vector<string> --------------------


-- capacities:

empty:               0
size:                8
max size:            768614336404564650
capacity:            8

-- access:

Front:               AAAAAAAA
Back:                H

-- content:

using []:            AAAAAAAA BBBBBBB CCCCCC DDDDD EEEE FFF GG H
using at:            AAAAAAAA BBBBBBB CCCCCC DDDDD EEEE FFF GG H
using iterator:      AAAAAAAA BBBBBBB CCCCCC DDDDD EEEE FFF GG H
using rev iterator:  H GG FFF EEEE DDDDD CCCCCC BBBBBBB AAAAAAAA
push_back():


-- capacities:

empty:               0
size:                9
max size:            768614336404564650
capacity:            16

-- content:

using []:            AAAAAAAA BBBBBBB CCCCCC DDDDD EEEE FFF GG H One long string
using at:            AAAAAAAA BBBBBBB CCCCCC DDDDD EEEE FFF GG H One long string
using iterator:      AAAAAAAA BBBBBBB CCCCCC DDDDD EEEE FFF GG H One long string
using rev iterator:  One long string H GG FFF EEEE DDDDD CCCCCC BBBBBBB AAAAAAAA

-- capacities:

empty:               0
size:                1
max size:            768614336404564650
capacity:            1

-- content:

using []:            Another long string
using at:            Another long string
using iterator:      Another long string
using rev iterator:  Another long string

-- capacities:

empty:               0
size:                8
max size:            768614336404564650
capacity:            16

-- capacities:

empty:               1
size:                0
max size:            768614336404564650
capacity:            1

--------------------------------------------------------
-------------------------- stack -----------------------
--------------------------------------------------------

--------------------------------------------------------
-------------------- push / pop (1) --------------------


--- info:

empty:               0
size:                4
top:                 4

--- content:

4
3
2
1

--- info:

empty:               0
size:                2
top:                 2

--- content:

2
1
--------------------------------------------------------
-------------------- push / pop (2) --------------------


--- info:

empty:               0
size:                4
top:                 4

--- content:

4
3
2
1

--- info:

empty:               0
size:                2
top:                 2

--- content:

2
1

empty : 1

--- content:


--------------------------------------------------------
----------- specified container construction -----------


--- info:

empty:               0
size:                16
top:                 4

--- content:

4
3
2
1
42
42
42
42
42
42
42
42
42
42
42
42

--- info:

empty:               0
size:                14
top:                 2

--- content:

2
1
42
42
42
42
42
42
42
42
42
42
42
42

vector content:  42 42 42 42 42 42 42 42 42 42 42 42

--------------------------------------------------------
------------------------- copy -------------------------

--- stack_1:

--- info:

empty:               0
size:                4
top:                 4

--- content:

4
3
2
1
--- stack_2:

--- info:

empty:               0
size:                4
top:                 4

--- content:

4
3
2
1

--------------------------------------------------------
---------------------- empty copy ----------------------

--- stack_1:
empty : 1

--- content:

--- stack_2:
empty : 1

--- content:


--------------------------------------------------------
---------------------- comparison ----------------------

left = right
left <= right
left >= right
left != right
left < right
left <= right

--------------------------------------------------------
------------- value_type = std::string (1) -------------


--- info:

empty:               0
size:                2
top:                 yes
yes
ok

--- info:

empty:               0
size:                2
top:                 ..
..
lalala

--------------------------------------------------------
------------- value_type = std::string (2) -------------


--- info:

empty:               0
size:                2
top:                 aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
ok azertyuiopqsdfghjklmwxcvbn,;azrtyu

--------------------------------------------------------
------------- using std::deque as container ------------


--- info:

empty:               0
size:                3
top:                 5

--- content:

5
7
3

--- info:

empty:               0
size:                2
top:                 7

--- content:

7
3

--------------------------------------------------------
--------------------------- map ------------------------
--------------------------------------------------------

--------------------------------------------------------
---------------- empty map constructor -----------------


--- info:

   empty: 1
    size: 0
max_size: 461168601842738790

--- content:


--------------------------------------------------------
----------------- insert one element -------------------


--- info:

   empty: 0
    size: 3
max_size: 461168601842738790

--- access:

  begin: 10 => 10
 rbegin: 150 => 150

--- content:

 10 => 10
 100 => 100
 150 => 150

--- info:

   empty: 0
    size: 5
max_size: 461168601842738790

--- access:

  begin: 5 => 5
 rbegin: 150 => 150

--- content:

 5 => 5
 10 => 10
 20 => 20
 100 => 100
 150 => 150

--------------------------------------------------------
------------ insert multiple elements (1) --------------


--- info:

   empty: 0
    size: 5
max_size: 461168601842738790

--- access:

  begin: 9 => 9
 rbegin: 25 => 25

--- content:

 9 => 9
 12 => 12
 14 => 14
 17 => 17
 25 => 25

--------------------------------------------------------
------------ insert multiple elements (2) --------------


--- info:

   empty: 0
    size: 6
max_size: 461168601842738790

--- access:

  begin: 3 => 3
 rbegin: 25 => 25

--- content:

 3 => 3
 9 => 9
 12 => 12
 14 => 14
 17 => 17
 25 => 25

--------------------------------------------------------
------------ insert multiple elements (3) --------------


--- info:

   empty: 1
    size: 0
max_size: 461168601842738790

--- content:


--------------------------------------------------------
------------ insert multiple elements (4) --------------


--- info:

   empty: 1
    size: 0
max_size: 461168601842738790

--- content:


--------------------------------------------------------
------------------ range constructor -------------------


--- info:

   empty: 0
    size: 5
max_size: 461168601842738790

--- access:

  begin: 5 => 5
 rbegin: 150 => 150

--- content:

 5 => 5
 10 => 10
 20 => 20
 100 => 100
 150 => 150

--------------------------------------------------------
------------------ copy constructor (1) ----------------


--- info:

   empty: 0
    size: 5
max_size: 461168601842738790

--- access:

  begin: 5 => 5
 rbegin: 150 => 150

--- content:

 5 => 5
 10 => 10
 20 => 20
 100 => 100
 150 => 150

--------------------------------------------------------
------------------ copy constructor (2) ----------------


--- info:

   empty: 1
    size: 0
max_size: 461168601842738790

--- content:


--------------------------------------------------------
------------------------- find -------------------------

8 is a valid key.
2 is not a valid key.
100 is not a valid key.

--------------------------------------------------------
--------------------- find / count ---------------------

 find(5): 5 => 5
 find(5): 5 => 5
count(5): 1
 find(10): 10 => 10
 find(10): 10 => 10
count(10): 1
 find(12): 12 => 12
count(12): 1
 find(30): 30 => 30
count(30): 1
count(50): 0
 find(0): 0 => 10
count(0): 1

--------------------------------------------------------
--------------- lower_bound / upper_bound --------------


--- info:

   empty: 0
    size: 5
max_size: 461168601842738790

--- access:

  begin: 5 => 5
 rbegin: 30 => 30

--- content:

 5 => 5
 10 => 10
 12 => 12
 20 => 20
 30 => 30

 [lower bound] 5 => 5
 [lower bound] 5 => 5
 [lower bound] 5 => 5
 [upper bound] 5 => 5
 [upper bound] 5 => 5
 [lower bound] 5 => 5
 [upper bound] 10 => 10
 [lower bound] 20 => 20
 [upper bound] 30 => 30
 [lower bound] 30 => 30
 [upper bound] => end()
 [lower bound] => end()
 [lower bound] => end()
 [upper bound] => end()
 [upper bound] => end()

--------------------------------------------------------
---------------------- equal range ---------------------

 equal_range(3): 3 | 4
 equal_range(3): 3 | 4
 equal_range(3): 3 | 4
12 | out of range
out of range | out of range

--------------------------------------------------------
----------------- erase one element (1) ----------------


--- info:

   empty: 0
    size: 8
max_size: 461168601842738790

--- access:

  begin: 1 => 1
 rbegin: 8 => 8

--- content:

 1 => 1
 2 => 2
 3 => 3
 4 => 4
 5 => 5
 6 => 6
 7 => 7
 8 => 8

--- info:

   empty: 0
    size: 7
max_size: 461168601842738790

--- access:

  begin: 1 => 1
 rbegin: 8 => 8

--- content:

 1 => 1
 2 => 2
 4 => 4
 5 => 5
 6 => 6
 7 => 7
 8 => 8

--- info:

   empty: 0
    size: 6
max_size: 461168601842738790

--- access:

  begin: 1 => 1
 rbegin: 8 => 8

--- content:

 1 => 1
 2 => 2
 4 => 4
 5 => 5
 7 => 7
 8 => 8

--- info:

   empty: 0
    size: 5
max_size: 461168601842738790

--- access:

  begin: 1 => 1
 rbegin: 8 => 8

--- content:

 1 => 1
 2 => 2
 4 => 4
 7 => 7
 8 => 8

--- info:

   empty: 0
    size: 4
max_size: 461168601842738790

--- access:

  begin: 1 => 1
 rbegin: 8 => 8

--- content:

 1 => 1
 2 => 2
 4 => 4
 8 => 8

--- info:

   empty: 0
    size: 1
max_size: 461168601842738790

--- access:

  begin: 2 => 2
 rbegin: 2 => 2

--- content:

 2 => 2

--- info:

   empty: 1
    size: 0
max_size: 461168601842738790

--- content:


--------------------------------------------------------
----------------- erase one element (2) ----------------

--> before erase:

--- info:

   empty: 0
    size: 8
max_size: 461168601842738790

--- access:

  begin: 1 => 1
 rbegin: 8 => 8

--- content:

 1 => 1
 2 => 2
 3 => 3
 4 => 4
 5 => 5
 6 => 6
 7 => 7
 8 => 8

--> after erase:

--- info:

   empty: 0
    size: 7
max_size: 461168601842738790

--- access:

  begin: 2 => 2
 rbegin: 8 => 8

--- content:

 2 => 2
 3 => 3
 4 => 4
 5 => 5
 6 => 6
 7 => 7
 8 => 8

--------------------------------------------------------
----------------- erase one element (3) ----------------

--> before erase:

--- info:

   empty: 0
    size: 8
max_size: 461168601842738790

--- access:

  begin: 1 => 1
 rbegin: 8 => 8

--- content:

 1 => 1
 2 => 2
 3 => 3
 4 => 4
 5 => 5
 6 => 6
 7 => 7
 8 => 8

--> after erase:

--- info:

   empty: 0
    size: 7
max_size: 461168601842738790

--- access:

  begin: 1 => 1
 rbegin: 7 => 7

--- content:

 1 => 1
 2 => 2
 3 => 3
 4 => 4
 5 => 5
 6 => 6
 7 => 7

--------------------------------------------------------
-------------- erase multiple elements (1) -------------

--> before erase:

--- info:

   empty: 0
    size: 8
max_size: 461168601842738790

--- access:

  begin: 1 => 1
 rbegin: 8 => 8

--- content:

 1 => 1
 2 => 2
 3 => 3
 4 => 4
 5 => 5
 6 => 6
 7 => 7
 8 => 8

--> after erase:

--- info:

   empty: 0
    size: 5
max_size: 461168601842738790

--- access:

  begin: 1 => 1
 rbegin: 8 => 8

--- content:

 1 => 1
 2 => 2
 3 => 3
 4 => 4
 8 => 8

--------------------------------------------------------
-------------- erase multiple elements (2) -------------

--> before erase:

--- info:

   empty: 0
    size: 8
max_size: 461168601842738790

--- access:

  begin: 1 => 1
 rbegin: 8 => 8

--- content:

 1 => 1
 2 => 2
 3 => 3
 4 => 4
 5 => 5
 6 => 6
 7 => 7
 8 => 8

--> after erase:

--- info:

   empty: 0
    size: 1
max_size: 461168601842738790

--- access:

  begin: 8 => 8
 rbegin: 8 => 8

--- content:

 8 => 8

--------------------------------------------------------
-------------- erase multiple elements (3) -------------

--> before erase:

--- info:

   empty: 0
    size: 8
max_size: 461168601842738790

--- access:

  begin: 1 => 1
 rbegin: 8 => 8

--- content:

 1 => 1
 2 => 2
 3 => 3
 4 => 4
 5 => 5
 6 => 6
 7 => 7
 8 => 8

--> after erase:

--- info:

   empty: 1
    size: 0
max_size: 461168601842738790

--- content:


--------------------------------------------------------
------------------------- swap -------------------------

--> first:

--- content:

 3 => 3
 5 => 5
 8 => 8

--> second:

--- content:

 1 => 1
 2 => 2
 4 => 4
 6 => 6
 7 => 7

*°*.*.°* SWAP *°*.*.°*

--> first:

--- content:

 1 => 1
 2 => 2
 4 => 4
 6 => 6
 7 => 7

--> second:

--- content:

 3 => 3
 5 => 5
 8 => 8

--------------------------------------------------------
------------------------ clear -------------------------


--- info:

   empty: 0
    size: 8
max_size: 461168601842738790

--- access:

  begin: 1 => 1
 rbegin: 8 => 8

--- content:

 1 => 1
 2 => 2
 3 => 3
 4 => 4
 5 => 5
 6 => 6
 7 => 7
 8 => 8


--- info:

   empty: 1
    size: 0
max_size: 461168601842738790

--- content:


--------------------------------------------------------
-------------------- element access --------------------


--- content:

 3 => 3
 5 => 5
 8 => 8

first[3] = 3
first[8] = 8
first[2] = 0

--- content:

 2 => 0
 3 => 3
 5 => 5
 8 => 8

--------------------------------------------------------
----------------------- iterator -----------------------


--- info:

   empty: 0
    size: 3
max_size: 461168601842738790

--- access:

  begin: 1 => 1
 rbegin: 3 => 3

--- content:

 1 => 1
 2 => 2
 3 => 3

--- iterating:

 [ it   ] 1 => 1
 [ it++ ] 1 => 1
 [ it   ] 2 => 2
 [ ++it ] 3 => 3
 [ ++it ] end
 [ it-- ] end
 [ it ] 3 => 3
 [ --it ] 2 => 2
 [ --it ] 1 => 1

--------------------------------------------------------
-------------------- const_iterator --------------------


--- info:

   empty: 0
    size: 3
max_size: 461168601842738790

--- access:

  begin: 1 => 1
 rbegin: 3 => 3

--- content:

 1 => 1
 2 => 2
 3 => 3

--- iterating:

 [ it   ] 1 => 1
 [ it++ ] 1 => 1
 [ it   ] 2 => 2
 [ ++it ] 3 => 3
 [ ++it ] end
 [ it-- ] end
 [ it ] 3 => 3
 [ --it ] 2 => 2
 [ --it ] 1 => 1

--------------------------------------------------------
------------------------ hard 1 ------------------------

empty: 0
 size: 10
	-- [0] --
 size: 9
	-- [1] --
 size: 8
	-- [2] --
 size: 7
	-- [3] --
 size: 4
	-- [4] --
 size: 2
 size: 4
	-- [5] --
 size: 1
 size: 5
	-- [6] --
 size: 0

--------------------------------------------------------
------------------------ hard 2 ------------------------

size:6

 90 => 8
 80 => hey
 42 => fgzgxfn
 27 => bee
 25 => funny
 12 => no

--------------------------------------------------------
------------------------ hard 3 ------------------------

size: 3

 a => an element
 b => old element
 c => another element

insert a new element via operator[]: 

 a => an element
 b => old element
 c => another element
 d => 

--------------------------------------------------------
------------------------ hard 4 ------------------------

############### [0] ###############
eq: 1 | ne: 0
lt: 0 | le: 1
gt: 0 | ge: 1
############### [1] ###############
eq: 1 | ne: 0
lt: 0 | le: 1
gt: 0 | ge: 1
############### [2] ###############
eq: 0 | ne: 1
lt: 1 | le: 1
gt: 0 | ge: 0
############### [3] ###############
eq: 0 | ne: 1
lt: 0 | le: 0
gt: 1 | ge: 1
############### [4] ###############
eq: 0 | ne: 1
lt: 0 | le: 0
gt: 1 | ge: 1
############### [5] ###############
eq: 0 | ne: 1
lt: 1 | le: 1
gt: 0 | ge: 0
############### [6] ###############
eq: 0 | ne: 1
lt: 1 | le: 1
gt: 0 | ge: 0
############### [7] ###############
eq: 0 | ne: 1
lt: 0 | le: 0
gt: 1 | ge: 1

--------------------------------------------------------
------------------------ hard 5 ------------------------

mp1 size: 10000
mp2 size: 10000
